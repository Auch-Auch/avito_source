package com.avito.android.validation;

import android.text.TextUtils;
import com.avito.android.analytics.screens.ScreenPublicConstsKt;
import com.avito.android.autogenerated_value.AutogeneratedValueParametersInteractor;
import com.avito.android.items.BasicInputItem;
import com.avito.android.items.InputItem;
import com.avito.android.items.RangeItem;
import com.avito.android.lib.design.input.FormatterType;
import com.avito.android.lib.design.input.MaskParameters;
import com.avito.android.remote.auth.AuthSource;
import com.avito.android.remote.model.category_parameters.BooleanParameter;
import com.avito.android.remote.model.category_parameters.CharParameter;
import com.avito.android.remote.model.category_parameters.DescriptionParameter;
import com.avito.android.remote.model.category_parameters.EmailParameter;
import com.avito.android.remote.model.category_parameters.IntParameter;
import com.avito.android.remote.model.category_parameters.NumericParameter;
import com.avito.android.remote.model.category_parameters.ParametersTree;
import com.avito.android.remote.model.category_parameters.PhoneParameter;
import com.avito.android.remote.model.category_parameters.PriceParameter;
import com.avito.android.remote.model.category_parameters.RangeParameter;
import com.avito.android.remote.model.category_parameters.VideoParameter;
import com.avito.android.remote.model.category_parameters.base.EditableParameter;
import com.avito.android.remote.model.category_parameters.base.ParameterSlot;
import com.avito.android.remote.model.category_parameters.base.TextParameter;
import com.avito.android.util.Formatter;
import com.avito.android.util.Logs;
import com.avito.android.util.Maybies;
import com.avito.android.util.SchedulersFactory;
import com.avito.android.validation.ValidationResult;
import io.reactivex.Maybe;
import io.reactivex.Observable;
import io.reactivex.Single;
import io.reactivex.functions.Consumer;
import io.reactivex.functions.Function;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.concurrent.Callable;
import kotlin.Metadata;
import kotlin.Unit;
import kotlin.jvm.functions.Function0;
import kotlin.jvm.functions.Function1;
import kotlin.jvm.functions.Function2;
import kotlin.jvm.internal.Intrinsics;
import kotlin.jvm.internal.Lambda;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import t6.y.m;
@Metadata(bv = {1, 0, 3}, d1 = {"\u0000¼\u0001\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0010\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\u0010 \n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0010\u000e\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0010\u000b\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0007\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0010$\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0004\n\u0002\u0018\u0002\n\u0002\u0010\u0006\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0002\b\u0006\u0018\u00002\u00020\u0001BA\u0012\u0006\u0010Y\u001a\u00020W\u0012\u0006\u0010B\u001a\u00020?\u0012\u0006\u0010P\u001a\u00020M\u0012\f\u0010J\u001a\b\u0012\u0004\u0012\u00020\r0G\u0012\u0012\u0010V\u001a\u000e\u0012\u0004\u0012\u00020\u0002\u0012\u0004\u0012\u00020Q0$¢\u0006\u0004\b[\u0010\\J!\u0010\u0006\u001a\u00020\u00052\u0006\u0010\u0003\u001a\u00020\u00022\b\u0010\u0004\u001a\u0004\u0018\u00010\u0002H\u0016¢\u0006\u0004\b\u0006\u0010\u0007J\u001b\u0010\u000b\u001a\u000e\u0012\n\u0012\b\u0012\u0004\u0012\u00020\n0\t0\bH\u0016¢\u0006\u0004\b\u000b\u0010\fJ\u001d\u0010\u0010\u001a\b\u0012\u0004\u0012\u00020\r0\u000f2\u0006\u0010\u000e\u001a\u00020\rH\u0016¢\u0006\u0004\b\u0010\u0010\u0011J!\u0010\u0014\u001a\u00020\u00052\u0006\u0010\u000e\u001a\u00020\r2\b\u0010\u0013\u001a\u0004\u0018\u00010\u0012H\u0016¢\u0006\u0004\b\u0014\u0010\u0015J\u001f\u0010\u0018\u001a\u00020\u00052\u0006\u0010\u000e\u001a\u00020\r2\u0006\u0010\u0017\u001a\u00020\u0016H\u0016¢\u0006\u0004\b\u0018\u0010\u0019J#\u0010\u001b\u001a\u000e\u0012\n\u0012\b\u0012\u0004\u0012\u00020\n0\t0\u001a2\u0006\u0010\u000e\u001a\u00020\rH\u0016¢\u0006\u0004\b\u001b\u0010\u001cJ-\u0010\u001d\u001a\u000e\u0012\n\u0012\b\u0012\u0004\u0012\u00020\n0\t0\u001a2\u0006\u0010\u000e\u001a\u00020\r2\b\u0010\u0013\u001a\u0004\u0018\u00010\u0012H\u0016¢\u0006\u0004\b\u001d\u0010\u001eJ\u001b\u0010\u001f\u001a\u000e\u0012\n\u0012\b\u0012\u0004\u0012\u00020\n0\t0\u001aH\u0016¢\u0006\u0004\b\u001f\u0010 JE\u0010&\u001a\u00020\u0005\"\u0004\b\u0000\u0010!*\b\u0012\u0004\u0012\u00028\u00000\"2\b\u0010#\u001a\u0004\u0018\u00010\r2\u0016\u0010%\u001a\u0012\u0012\u0006\u0012\u0004\u0018\u00010\r\u0012\u0006\u0012\u0004\u0018\u00018\u00000$H\bø\u0001\u0000¢\u0006\u0004\b&\u0010'J\u001f\u0010*\u001a\u00020\u00052\u0006\u0010\u000e\u001a\u00020\r2\u0006\u0010)\u001a\u00020(H\u0016¢\u0006\u0004\b*\u0010+J#\u0010-\u001a\u000e\u0012\u0004\u0012\u00020\r\u0012\u0004\u0012\u00020\r0,2\u0006\u0010\u000e\u001a\u00020\rH\u0016¢\u0006\u0004\b-\u0010.J+\u00100\u001a\u00020\u00052\u0006\u0010\u000e\u001a\u00020\r2\b\u0010/\u001a\u0004\u0018\u00010\r2\b\u0010\u0013\u001a\u0004\u0018\u00010\u0012H\u0002¢\u0006\u0004\b0\u00101J3\u00104\u001a\u000e\u0012\n\u0012\b\u0012\u0004\u0012\u00020\n0\t0\u001a2\u0006\u0010\u000e\u001a\u00020\r2\u000e\u00103\u001a\n\u0012\u0004\u0012\u00020\u0005\u0018\u000102H\u0002¢\u0006\u0004\b4\u00105J\u0017\u00107\u001a\u0002062\u0006\u0010\u000e\u001a\u00020\rH\u0002¢\u0006\u0004\b7\u00108J\u001b\u00109\u001a\u0006\u0012\u0002\b\u00030\"2\u0006\u0010\u000e\u001a\u00020\rH\u0002¢\u0006\u0004\b9\u0010:J\u0015\u0010=\u001a\u0004\u0018\u00010<*\u00020;H\u0002¢\u0006\u0004\b=\u0010>R\u0016\u0010B\u001a\u00020?8\u0002@\u0002X\u0004¢\u0006\u0006\n\u0004\b@\u0010AR6\u0010F\u001a\"\u0012\u0004\u0012\u00020\r\u0012\u0006\u0012\u0004\u0018\u00010\r0Cj\u0010\u0012\u0004\u0012\u00020\r\u0012\u0006\u0012\u0004\u0018\u00010\r`D8\u0002@\u0002X\u0004¢\u0006\u0006\n\u0004\b=\u0010ER\u001c\u0010J\u001a\b\u0012\u0004\u0012\u00020\r0G8\u0002@\u0002X\u0004¢\u0006\u0006\n\u0004\bH\u0010IR\u0016\u0010L\u001a\u00020\u00028\u0002@\u0002X.¢\u0006\u0006\n\u0004\b9\u0010KR\u0016\u0010P\u001a\u00020M8\u0002@\u0002X\u0004¢\u0006\u0006\n\u0004\bN\u0010OR\u0016\u0010S\u001a\u00020Q8\u0002@\u0002X.¢\u0006\u0006\n\u0004\b7\u0010RR\"\u0010V\u001a\u000e\u0012\u0004\u0012\u00020\u0002\u0012\u0004\u0012\u00020Q0$8\u0002@\u0002X\u0004¢\u0006\u0006\n\u0004\bT\u0010UR\u0016\u0010Y\u001a\u00020W8\u0002@\u0002X\u0004¢\u0006\u0006\n\u0004\b4\u0010XR\u0016\u0010Z\u001a\u00020\u00028\u0002@\u0002X.¢\u0006\u0006\n\u0004\b0\u0010K\u0002\u0007\n\u0005\b20\u0001¨\u0006]"}, d2 = {"Lcom/avito/android/validation/ParametersListInteractorImpl;", "Lcom/avito/android/validation/ParametersListInteractor;", "Lcom/avito/android/remote/model/category_parameters/ParametersTree;", "paramsToValidate", "paramsForConditionChecks", "", "setParameters", "(Lcom/avito/android/remote/model/category_parameters/ParametersTree;Lcom/avito/android/remote/model/category_parameters/ParametersTree;)V", "Lio/reactivex/Observable;", "", "Lcom/avito/android/validation/ValidationResult;", "getInitialValidationResults", "()Lio/reactivex/Observable;", "", "id", "Lio/reactivex/Maybe;", "getHintFor", "(Ljava/lang/String;)Lio/reactivex/Maybe;", "Lcom/avito/android/items/BasicInputItem;", "valueItem", "applyNewValue", "(Ljava/lang/String;Lcom/avito/android/items/BasicInputItem;)V", "", "checked", "applyToggleValue", "(Ljava/lang/String;Z)V", "Lio/reactivex/Single;", "validateWithDependentEntities", "(Ljava/lang/String;)Lio/reactivex/Single;", "validateWithDependentEntitiesAndApplyValue", "(Ljava/lang/String;Lcom/avito/android/items/BasicInputItem;)Lio/reactivex/Single;", "validateWholeStructure", "()Lio/reactivex/Single;", "T", "Lcom/avito/android/remote/model/category_parameters/base/EditableParameter;", "newValue", "Lkotlin/Function1;", "parser", "setParsedValue", "(Lcom/avito/android/remote/model/category_parameters/base/EditableParameter;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V", "Lcom/avito/android/items/RangeItem;", "item", "applyRangeValue", "(Ljava/lang/String;Lcom/avito/android/items/RangeItem;)V", "", "processAutogeneratedValues", "(Ljava/lang/String;)Ljava/util/Map;", "value", AuthSource.SEND_ABUSE, "(Ljava/lang/String;Ljava/lang/String;Lcom/avito/android/items/BasicInputItem;)V", "Lkotlin/Function0;", "valueApplyCall", "e", "(Ljava/lang/String;Lkotlin/jvm/functions/Function0;)Lio/reactivex/Single;", "Lcom/avito/android/remote/model/category_parameters/base/ParameterSlot;", "c", "(Ljava/lang/String;)Lcom/avito/android/remote/model/category_parameters/base/ParameterSlot;", AuthSource.BOOKING_ORDER, "(Ljava/lang/String;)Lcom/avito/android/remote/model/category_parameters/base/EditableParameter;", "Lcom/avito/android/items/InputItem;", "", "d", "(Lcom/avito/android/items/InputItem;)Ljava/lang/Double;", "Lcom/avito/android/util/SchedulersFactory;", "f", "Lcom/avito/android/util/SchedulersFactory;", "schedulers", "Ljava/util/HashMap;", "Lkotlin/collections/HashMap;", "Ljava/util/HashMap;", "validationErrors", "Lcom/avito/android/util/Formatter;", "h", "Lcom/avito/android/util/Formatter;", "phoneFormatter", "Lcom/avito/android/remote/model/category_parameters/ParametersTree;", "parametersForConditionChecks", "Lcom/avito/android/validation/ValidationLogger;", a2.g.r.g.a, "Lcom/avito/android/validation/ValidationLogger;", "logger", "Lcom/avito/android/autogenerated_value/AutogeneratedValueParametersInteractor;", "Lcom/avito/android/autogenerated_value/AutogeneratedValueParametersInteractor;", "autoGeneratedValueInteractor", "i", "Lkotlin/jvm/functions/Function1;", "interactorProvider", "Lcom/avito/android/validation/ParametersValidator;", "Lcom/avito/android/validation/ParametersValidator;", "validator", ScreenPublicConstsKt.CONTENT_TYPE_PUBLISH_PARAMETERS_INIT, "<init>", "(Lcom/avito/android/validation/ParametersValidator;Lcom/avito/android/util/SchedulersFactory;Lcom/avito/android/validation/ValidationLogger;Lcom/avito/android/util/Formatter;Lkotlin/jvm/functions/Function1;)V", "item-temporary_release"}, k = 1, mv = {1, 4, 2})
public final class ParametersListInteractorImpl implements ParametersListInteractor {
    public ParametersTree a;
    public ParametersTree b;
    public AutogeneratedValueParametersInteractor c;
    public final HashMap<String, String> d = new HashMap<>();
    public final ParametersValidator e;
    public final SchedulersFactory f;
    public final ValidationLogger g;
    public final Formatter<String> h;
    public final Function1<ParametersTree, AutogeneratedValueParametersInteractor> i;

    public static final class a<T, R> implements Function<ParametersTree, ArrayList<ValidationResult>> {
        public final /* synthetic */ ParametersListInteractorImpl a;

        public a(ParametersListInteractorImpl parametersListInteractorImpl) {
            this.a = parametersListInteractorImpl;
        }

        /* Return type fixed from 'java.lang.Object' to match base method */
        /* JADX DEBUG: Method arguments types fixed to match base method, original types: [java.lang.Object] */
        @Override // io.reactivex.functions.Function
        public ArrayList<ValidationResult> apply(ParametersTree parametersTree) {
            ParametersTree parametersTree2 = parametersTree;
            Intrinsics.checkNotNullParameter(parametersTree2, "it");
            ArrayList arrayList = new ArrayList();
            for (T t : parametersTree2) {
                if (t instanceof EditableParameter) {
                    arrayList.add(t);
                }
            }
            ArrayList<ValidationResult> arrayList2 = new ArrayList<>();
            Iterator it = arrayList.iterator();
            while (it.hasNext()) {
                EditableParameter<?> editableParameter = (EditableParameter) it.next();
                if (editableParameter.hasError()) {
                    String id = editableParameter.getId();
                    String title = editableParameter.getTitle();
                    String error = editableParameter.getError();
                    Intrinsics.checkNotNull(error);
                    arrayList2.add(new ValidationResult.Failure.Error(id, title, error, null, null, 24, null));
                } else if (editableParameter.hasValue()) {
                    ValidationResult validate = this.a.e.validate(editableParameter, ParametersListInteractorImpl.access$getParametersForConditionChecks$p(this.a));
                    if ((validate instanceof ValidationResult.Failure) || (validate instanceof ValidationResult.Info)) {
                        arrayList2.add(validate);
                    }
                }
            }
            return arrayList2;
        }
    }

    public static final class b<T, R> implements Function<ArrayList<ValidationResult>, List<? extends ValidationResult>> {
        public static final b a = new b();

        /* Return type fixed from 'java.lang.Object' to match base method */
        /* JADX DEBUG: Method arguments types fixed to match base method, original types: [java.lang.Object] */
        @Override // io.reactivex.functions.Function
        public List<? extends ValidationResult> apply(ArrayList<ValidationResult> arrayList) {
            ArrayList<ValidationResult> arrayList2 = arrayList;
            Intrinsics.checkNotNullParameter(arrayList2, "it");
            return arrayList2;
        }
    }

    public static final class c extends Lambda implements Function2<String, CharSequence, Unit> {
        public final /* synthetic */ ParametersListInteractorImpl a;
        public final /* synthetic */ Map b;

        /* JADX INFO: super call moved to the top of the method (can break code semantics) */
        public c(ParametersListInteractorImpl parametersListInteractorImpl, Map map) {
            super(2);
            this.a = parametersListInteractorImpl;
            this.b = map;
        }

        /* Return type fixed from 'java.lang.Object' to match base method */
        /* JADX DEBUG: Method arguments types fixed to match base method, original types: [java.lang.Object, java.lang.Object] */
        @Override // kotlin.jvm.functions.Function2
        public Unit invoke(String str, CharSequence charSequence) {
            String str2 = str;
            CharSequence charSequence2 = charSequence;
            Intrinsics.checkNotNullParameter(str2, "autogeneratedParamId");
            this.a.a(str2, charSequence2 != null ? charSequence2.toString() : null, null);
            this.b.put(str2, String.valueOf(charSequence2));
            return Unit.INSTANCE;
        }
    }

    public static final class d<T, R> implements Function<ParametersTree, Iterable<? extends ParameterSlot>> {
        public static final d a = new d();

        /* Return type fixed from 'java.lang.Object' to match base method */
        /* JADX DEBUG: Method arguments types fixed to match base method, original types: [java.lang.Object] */
        @Override // io.reactivex.functions.Function
        public Iterable<? extends ParameterSlot> apply(ParametersTree parametersTree) {
            ParametersTree parametersTree2 = parametersTree;
            Intrinsics.checkNotNullParameter(parametersTree2, "it");
            return parametersTree2;
        }
    }

    public static final class e<T, R> implements Function<EditableParameter<?>, ValidationResult> {
        public final /* synthetic */ ParametersListInteractorImpl a;

        public e(ParametersListInteractorImpl parametersListInteractorImpl) {
            this.a = parametersListInteractorImpl;
        }

        /* Return type fixed from 'java.lang.Object' to match base method */
        /* JADX DEBUG: Method arguments types fixed to match base method, original types: [java.lang.Object] */
        @Override // io.reactivex.functions.Function
        public ValidationResult apply(EditableParameter<?> editableParameter) {
            EditableParameter<?> editableParameter2 = editableParameter;
            Intrinsics.checkNotNullParameter(editableParameter2, "it");
            return this.a.e.validate(editableParameter2, ParametersListInteractorImpl.access$getParametersForConditionChecks$p(this.a));
        }
    }

    public static final class f<T> implements Consumer<List<ValidationResult>> {
        public final /* synthetic */ ParametersListInteractorImpl a;

        public f(ParametersListInteractorImpl parametersListInteractorImpl) {
            this.a = parametersListInteractorImpl;
        }

        /* JADX DEBUG: Method arguments types fixed to match base method, original types: [java.lang.Object] */
        @Override // io.reactivex.functions.Consumer
        public void accept(List<ValidationResult> list) {
            List<ValidationResult> list2 = list;
            ParametersListInteractorImpl parametersListInteractorImpl = this.a;
            Intrinsics.checkNotNullExpressionValue(list2, "it");
            ParametersListInteractorImpl.access$logFailures(parametersListInteractorImpl, list2);
            for (T t : list2) {
                ParametersListInteractorImpl parametersListInteractorImpl2 = this.a;
                EditableParameter b = parametersListInteractorImpl2.b(t.getId());
                Intrinsics.checkNotNullExpressionValue(t, "it");
                ParametersListInteractorImpl.access$applyError(parametersListInteractorImpl2, b, t);
            }
        }
    }

    public static final class g extends Lambda implements Function0<Unit> {
        public final /* synthetic */ ParametersListInteractorImpl a;
        public final /* synthetic */ String b;
        public final /* synthetic */ BasicInputItem c;

        /* JADX INFO: super call moved to the top of the method (can break code semantics) */
        public g(ParametersListInteractorImpl parametersListInteractorImpl, String str, BasicInputItem basicInputItem) {
            super(0);
            this.a = parametersListInteractorImpl;
            this.b = str;
            this.c = basicInputItem;
        }

        /* Return type fixed from 'java.lang.Object' to match base method */
        @Override // kotlin.jvm.functions.Function0
        public Unit invoke() {
            this.a.applyNewValue(this.b, this.c);
            return Unit.INSTANCE;
        }
    }

    public static final class h<V> implements Callable<List<? extends ValidationResult>> {
        public final /* synthetic */ ParametersListInteractorImpl a;
        public final /* synthetic */ String b;
        public final /* synthetic */ Function0 c;

        public h(ParametersListInteractorImpl parametersListInteractorImpl, String str, Function0 function0) {
            this.a = parametersListInteractorImpl;
            this.b = str;
            this.c = function0;
        }

        /* Return type fixed from 'java.lang.Object' to match base method */
        @Override // java.util.concurrent.Callable
        public List<? extends ValidationResult> call() {
            EditableParameter<?> b2 = this.a.b(this.b);
            Function0 function0 = this.c;
            if (function0 != null) {
                Unit unit = (Unit) function0.invoke();
            }
            return this.a.e.validateWithDependentParameters(b2, ParametersListInteractorImpl.access$getParametersForConditionChecks$p(this.a));
        }
    }

    public static final class i<T> implements Consumer<List<? extends ValidationResult>> {
        public final /* synthetic */ ParametersListInteractorImpl a;

        public i(ParametersListInteractorImpl parametersListInteractorImpl) {
            this.a = parametersListInteractorImpl;
        }

        /* JADX DEBUG: Method arguments types fixed to match base method, original types: [java.lang.Object] */
        @Override // io.reactivex.functions.Consumer
        public void accept(List<? extends ValidationResult> list) {
            List<? extends ValidationResult> list2 = list;
            ParametersListInteractorImpl parametersListInteractorImpl = this.a;
            Intrinsics.checkNotNullExpressionValue(list2, "it");
            ParametersListInteractorImpl.access$logFailures(parametersListInteractorImpl, list2);
            for (T t : list2) {
                ParametersListInteractorImpl parametersListInteractorImpl2 = this.a;
                ParametersListInteractorImpl.access$applyError(parametersListInteractorImpl2, parametersListInteractorImpl2.b(t.getId()), t);
            }
        }
    }

    /* JADX DEBUG: Multi-variable search result rejected for r6v0, resolved type: kotlin.jvm.functions.Function1<? super com.avito.android.remote.model.category_parameters.ParametersTree, ? extends com.avito.android.autogenerated_value.AutogeneratedValueParametersInteractor> */
    /* JADX WARN: Multi-variable type inference failed */
    public ParametersListInteractorImpl(@NotNull ParametersValidator parametersValidator, @NotNull SchedulersFactory schedulersFactory, @NotNull ValidationLogger validationLogger, @NotNull Formatter<String> formatter, @NotNull Function1<? super ParametersTree, ? extends AutogeneratedValueParametersInteractor> function1) {
        Intrinsics.checkNotNullParameter(parametersValidator, "validator");
        Intrinsics.checkNotNullParameter(schedulersFactory, "schedulers");
        Intrinsics.checkNotNullParameter(validationLogger, "logger");
        Intrinsics.checkNotNullParameter(formatter, "phoneFormatter");
        Intrinsics.checkNotNullParameter(function1, "interactorProvider");
        this.e = parametersValidator;
        this.f = schedulersFactory;
        this.g = validationLogger;
        this.h = formatter;
        this.i = function1;
    }

    public static final void access$applyError(ParametersListInteractorImpl parametersListInteractorImpl, EditableParameter editableParameter, ValidationResult validationResult) {
        Objects.requireNonNull(parametersListInteractorImpl);
        editableParameter.setError(validationResult instanceof ValidationResult.Failure.Error ? ((ValidationResult.Failure.Error) validationResult).getText() : null);
    }

    public static final /* synthetic */ ParametersTree access$getParametersForConditionChecks$p(ParametersListInteractorImpl parametersListInteractorImpl) {
        ParametersTree parametersTree = parametersListInteractorImpl.b;
        if (parametersTree == null) {
            Intrinsics.throwUninitializedPropertyAccessException("parametersForConditionChecks");
        }
        return parametersTree;
    }

    public static final void access$logFailures(ParametersListInteractorImpl parametersListInteractorImpl, List list) {
        Objects.requireNonNull(parametersListInteractorImpl);
        Iterator it = list.iterator();
        while (it.hasNext()) {
            ValidationResult validationResult = (ValidationResult) it.next();
            if (validationResult instanceof ValidationResult.Failure) {
                ValidationResult.Failure failure = (ValidationResult.Failure) validationResult;
                if (!Intrinsics.areEqual(parametersListInteractorImpl.d.get(validationResult.getId()), failure.getText())) {
                    String tag = failure.getTag();
                    if (!(tag == null || tag.length() == 0)) {
                        ValidationLogger validationLogger = parametersListInteractorImpl.g;
                        String tag2 = failure.getTag();
                        Intrinsics.checkNotNull(tag2);
                        ParametersTree parametersTree = parametersListInteractorImpl.a;
                        if (parametersTree == null) {
                            Intrinsics.throwUninitializedPropertyAccessException(ScreenPublicConstsKt.CONTENT_TYPE_PUBLISH_PARAMETERS_INIT);
                        }
                        ArrayList arrayList = new ArrayList();
                        for (Object obj : parametersTree) {
                            ParameterSlot parameterSlot = (ParameterSlot) obj;
                            if (!((parameterSlot instanceof EmailParameter) || (parameterSlot instanceof PhoneParameter))) {
                                arrayList.add(obj);
                            }
                        }
                        LinkedHashMap linkedHashMap = new LinkedHashMap();
                        Iterator it2 = arrayList.iterator();
                        while (it2.hasNext()) {
                            ParameterSlot parameterSlot2 = (ParameterSlot) it2.next();
                            if (parameterSlot2 instanceof EditableParameter) {
                                String id = parameterSlot2.getId();
                                Object value = ((EditableParameter) parameterSlot2).getValue();
                                String obj2 = value != null ? value.toString() : null;
                                if (obj2 == null) {
                                    obj2 = "";
                                }
                                linkedHashMap.put(id, obj2);
                            }
                        }
                        validationLogger.logFailure(tag2, linkedHashMap, failure.getText());
                    }
                }
                parametersListInteractorImpl.d.put(validationResult.getId(), failure.getText());
            } else if ((validationResult instanceof ValidationResult.Success) || (validationResult instanceof ValidationResult.Info)) {
                parametersListInteractorImpl.d.put(validationResult.getId(), null);
            }
        }
    }

    public final void a(String str, String str2, BasicInputItem basicInputItem) {
        Double d2;
        ParameterSlot c2 = c(str);
        if (c2 instanceof CharParameter) {
            ((CharParameter) c2).setValue(str2);
        } else if (c2 instanceof EmailParameter) {
            ((EmailParameter) c2).setValue(str2);
        } else if (c2 instanceof PhoneParameter) {
            ((PhoneParameter) c2).setValue(this.h.format(str2));
        } else if (c2 instanceof VideoParameter) {
            ((VideoParameter) c2).setValue(str2);
        } else {
            boolean z = false;
            if (c2 instanceof PriceParameter) {
                EditableParameter editableParameter = (EditableParameter) c2;
                if (str2 != null) {
                    if (str2.length() == 0) {
                        z = true;
                    }
                    if (!z) {
                        try {
                            if (!TextUtils.isDigitsOnly(str2)) {
                                str2 = (String) ((PriceParameter) c2).getValue();
                            }
                            editableParameter.setValue(str2);
                            return;
                        } catch (NumberFormatException unused) {
                            return;
                        }
                    }
                }
                editableParameter.setValue(null);
            } else if (c2 instanceof IntParameter) {
                EditableParameter editableParameter2 = (EditableParameter) c2;
                if (str2 != null) {
                    if (str2.length() == 0) {
                        z = true;
                    }
                    if (!z) {
                        editableParameter2.setValue(Long.valueOf(Long.parseLong(str2)));
                        return;
                    }
                }
                editableParameter2.setValue(null);
            } else if (c2 instanceof NumericParameter) {
                EditableParameter editableParameter3 = (EditableParameter) c2;
                if (str2 != null) {
                    if (str2.length() == 0) {
                        z = true;
                    }
                    if (!z) {
                        if (basicInputItem instanceof InputItem) {
                            d2 = d((InputItem) basicInputItem);
                        } else {
                            d2 = Double.valueOf(Double.parseDouble(str2));
                        }
                        editableParameter3.setValue(d2);
                        return;
                    }
                }
                editableParameter3.setValue(null);
            } else if (c2 instanceof DescriptionParameter) {
                EditableParameter editableParameter4 = (EditableParameter) c2;
                if (!Intrinsics.areEqual(editableParameter4.getValue(), str2)) {
                    editableParameter4.setValue(str2);
                    editableParameter4.setError(null);
                }
            }
        }
    }

    @Override // com.avito.android.validation.ParametersListInteractor
    public void applyNewValue(@NotNull String str, @Nullable BasicInputItem basicInputItem) {
        Intrinsics.checkNotNullParameter(str, "id");
        a(str, basicInputItem != null ? basicInputItem.getValue() : null, basicInputItem);
    }

    @Override // com.avito.android.validation.ParametersListInteractor
    public void applyRangeValue(@NotNull String str, @NotNull RangeItem rangeItem) {
        Intrinsics.checkNotNullParameter(str, "id");
        Intrinsics.checkNotNullParameter(rangeItem, "item");
        ParameterSlot c2 = c(str);
        if (!(c2 instanceof RangeParameter)) {
            c2 = null;
        }
        RangeParameter rangeParameter = (RangeParameter) c2;
        if (rangeParameter != null) {
            Double d2 = d(rangeItem.getFrom());
            Double d3 = d(rangeItem.getTo());
            if ((rangeItem instanceof RangeItem.CreRangeItem) && !((RangeItem.CreRangeItem) rangeItem).getFromEnabler().isChecked()) {
                d2 = d3;
            }
            rangeParameter.setValue(new RangeParameter.RangeValue(d2, d3));
        }
    }

    @Override // com.avito.android.validation.ParametersListInteractor
    public void applyToggleValue(@NotNull String str, boolean z) {
        Intrinsics.checkNotNullParameter(str, "id");
        try {
            EditableParameter<?> b2 = b(str);
            BooleanParameter booleanParameter = (BooleanParameter) b2;
            ((BooleanParameter) b2).setValue(Boolean.valueOf(z));
        } catch (IllegalArgumentException e2) {
            Logs.debug("Failed to apply value to parameter with id " + str, e2);
        }
    }

    public final EditableParameter<?> b(String str) {
        ParameterSlot c2 = c(str);
        if (c2 instanceof EditableParameter) {
            return (EditableParameter) c2;
        }
        throw new IllegalArgumentException(a2.b.a.a.a.e3("Parameter with id: ", str, " is not instance of EditableParameter"));
    }

    public final ParameterSlot c(String str) {
        ParametersTree parametersTree = this.a;
        if (parametersTree == null) {
            Intrinsics.throwUninitializedPropertyAccessException(ScreenPublicConstsKt.CONTENT_TYPE_PUBLISH_PARAMETERS_INIT);
        }
        ParameterSlot findParameter = parametersTree.findParameter(str);
        if (findParameter != null) {
            return findParameter;
        }
        throw new IllegalArgumentException(a2.b.a.a.a.e3("Parameter with id: ", str, " cannot be found in the parameters tree"));
    }

    public final Double d(InputItem inputItem) {
        String value = inputItem.getValue();
        Character ch = null;
        if (value == null || value.length() == 0) {
            return null;
        }
        MaskParameters maskParameters = inputItem.getInputType().getMaskParameters();
        if (maskParameters != null) {
            ch = Character.valueOf(maskParameters.getDecimalSeparator());
        }
        if (ch != null) {
            value = m.replace$default(value, ch.charValue(), (char) FormatterType.defaultDecimalSeparator, false, 4, (Object) null);
        }
        return Double.valueOf(Double.parseDouble(value));
    }

    public final Single<List<ValidationResult>> e(String str, Function0<Unit> function0) {
        Single<List<ValidationResult>> subscribeOn = Single.fromCallable(new h(this, str, function0)).doOnSuccess(new i(this)).subscribeOn(this.f.single());
        Intrinsics.checkNotNullExpressionValue(subscribeOn, "Single.fromCallable {\n  …beOn(schedulers.single())");
        return subscribeOn;
    }

    @Override // com.avito.android.validation.ParametersListInteractor
    @NotNull
    public Maybe<String> getHintFor(@NotNull String str) {
        Intrinsics.checkNotNullParameter(str, "id");
        ParameterSlot c2 = c(str);
        if (c2 instanceof TextParameter) {
            TextParameter textParameter = (TextParameter) c2;
            if (textParameter.getHint() != null) {
                return Maybies.toMaybe(textParameter.getHint());
            }
        }
        Maybe<String> empty = Maybe.empty();
        Intrinsics.checkNotNullExpressionValue(empty, "Maybe.empty()");
        return empty;
    }

    @Override // com.avito.android.validation.ParametersListInteractor
    @NotNull
    public Observable<List<ValidationResult>> getInitialValidationResults() {
        ParametersTree parametersTree = this.a;
        if (parametersTree == null) {
            Intrinsics.throwUninitializedPropertyAccessException(ScreenPublicConstsKt.CONTENT_TYPE_PUBLISH_PARAMETERS_INIT);
        }
        Observable<List<ValidationResult>> map = Observable.just(parametersTree).observeOn(this.f.single()).map(new a(this)).map(b.a);
        Intrinsics.checkNotNullExpressionValue(map, "Observable.just(paramete… List<ValidationResult> }");
        return map;
    }

    @Override // com.avito.android.validation.ParametersListInteractor
    @NotNull
    public Map<String, String> processAutogeneratedValues(@NotNull String str) {
        Intrinsics.checkNotNullParameter(str, "id");
        LinkedHashMap linkedHashMap = new LinkedHashMap();
        AutogeneratedValueParametersInteractor autogeneratedValueParametersInteractor = this.c;
        if (autogeneratedValueParametersInteractor == null) {
            Intrinsics.throwUninitializedPropertyAccessException("autoGeneratedValueInteractor");
        }
        autogeneratedValueParametersInteractor.onValueChanged(str, new c(this, linkedHashMap));
        return linkedHashMap;
    }

    @Override // com.avito.android.validation.ParametersListInteractor
    public void setParameters(@NotNull ParametersTree parametersTree, @Nullable ParametersTree parametersTree2) {
        Intrinsics.checkNotNullParameter(parametersTree, "paramsToValidate");
        this.a = parametersTree;
        if (parametersTree2 == null) {
            parametersTree2 = parametersTree;
        }
        this.b = parametersTree2;
        this.c = this.i.invoke(parametersTree);
    }

    /* JADX DEBUG: Multi-variable search result rejected for r2v0, resolved type: com.avito.android.remote.model.category_parameters.base.EditableParameter<T> */
    /* JADX WARN: Multi-variable type inference failed */
    public final <T> void setParsedValue(@NotNull EditableParameter<T> editableParameter, @Nullable String str, @NotNull Function1<? super String, ? extends T> function1) {
        Intrinsics.checkNotNullParameter(editableParameter, "$this$setParsedValue");
        Intrinsics.checkNotNullParameter(function1, "parser");
        if (str != null) {
            if (!(str.length() == 0)) {
                try {
                    editableParameter.setValue(function1.invoke(str));
                    return;
                } catch (NumberFormatException unused) {
                    return;
                }
            }
        }
        editableParameter.setValue(null);
    }

    @Override // com.avito.android.validation.ParametersListInteractor
    @NotNull
    public Single<List<ValidationResult>> validateWholeStructure() {
        ParametersTree parametersTree = this.a;
        if (parametersTree == null) {
            Intrinsics.throwUninitializedPropertyAccessException(ScreenPublicConstsKt.CONTENT_TYPE_PUBLISH_PARAMETERS_INIT);
        }
        Observable just = Observable.just(parametersTree);
        Intrinsics.checkNotNullExpressionValue(just, "Observable.just(this)");
        Single<List<ValidationResult>> doOnSuccess = just.flatMapIterable(d.a).ofType(EditableParameter.class).map(new e(this)).toList().doOnSuccess(new f(this));
        Intrinsics.checkNotNullExpressionValue(doOnSuccess, "parameters\n            .…Error(it) }\n            }");
        return doOnSuccess;
    }

    @Override // com.avito.android.validation.ParametersListInteractor
    @NotNull
    public Single<List<ValidationResult>> validateWithDependentEntities(@NotNull String str) {
        Intrinsics.checkNotNullParameter(str, "id");
        return e(str, null);
    }

    @Override // com.avito.android.validation.ParametersListInteractor
    @NotNull
    public Single<List<ValidationResult>> validateWithDependentEntitiesAndApplyValue(@NotNull String str, @Nullable BasicInputItem basicInputItem) {
        Intrinsics.checkNotNullParameter(str, "id");
        return e(str, new g(this, str, basicInputItem));
    }
}
